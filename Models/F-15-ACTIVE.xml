<?xml version="1.0"?>

<PropertyList include="F-15_StrikeEagle-bombableinclude.xml">

 <path>F-15-SMTD.ac</path>
 
 <!-- MP sound call -->
  <sound><path>Aircraft/F-15-Active/Sounds/mp-sound.xml</path></sound>
  
 <!-- Skin switching code -->

<nasal>
    <load>
      var livery_update = aircraft.livery_update.new("Aircraft/F-15-ACTIVE/Models/Liveries", 10);
	    <![CDATA[
var root = cmdarg();
var rootindex = root.getIndex();
var mpPath = "/ai/models/multiplayer["~ rootindex ~"]/";

var lightsPath = mpPath~"lightpack/"; #path to the property node, where all internal values are placed

props.globals.initNode(mpPath~"sim/is-MP-Aircraft", 1, "BOOL");
      
srand();
#wherever you want to add randomization of time, use something like:  + rand()*0.05-0.025 (included by default where appropriate)


#list of switches for lights - if you don't intend to use some light, assign it nil value instead, like whateverSwitch = nil; and you don't need to care about anything else
#IMPORTANT: don't put / on the start of the string, it's already included in the mpPath property
var navSwitch = mpPath~"controls/lighting/nav-lights-switch";
var beaconSwitch = mpPath~"controls/lighting/beacon-switch";
var strobeSwitch = mpPath~"controls/lighting/strobe-switch";
var landingSwitch = mpPath~"controls/lighting/landing-lights-switch";
var taxiSwitch = mpPath~"controls/lighting/taxi-light-switch";
var probeSwitch = mpPath~"controls/lighting/probe-light-switch";
var whiteSwitch = mpPath~"controls/lighting/white-light-switch";

#switch this from 1 to 0 if you want to use advanced cyclical fading animation of the the nav lights instead of being stable on when the switch is on
navStillOn = 1;


#I need to set listener on some MP transferred properties; this doesn't seem to work well sometimes, so I mirror them to the original location on any change
#This also simplifies work as I can use almost the same code for MP as is the local Nasal. Furthermore, I can use meaningful property names in the model XML files instead of referencing the MP properties. 
var mpVar = {
	new: func(propIn, propOut) {
		var m = { parents: [mpVar] };
		m.propIn = propIn;
		m.propOut = propOut;
		if(propIn==nil or propOut==nil) return m;
		m.value = getprop(propIn);
		setprop(propOut, m.value);
		return m;
	},
	check: func {
		if(me.propIn==nil or me.propOut==nil) return;
		var newValue = getprop(me.propIn);
		if(newValue != me.value) {
			setprop(me.propOut, newValue);
			me.value = newValue;
			#print("value of "~me.propOut~" changed: "~newValue);
		}
	},
};
#init any property copy object needed in this array (anything you need to transfer over MP, but you are using the original paths in your xmls)
#also used for properties you are using a listener on, or properties which you maybe want to manipulate during the <unload> 
#if you're just using the pack, change the values according to the MP bindings in the -set.xml file
#you don't need to delete the entries if the path is nil - it gets skipped automatically and the MP path is just ignored
var mirrorValues = [
	mpVar.new(mpPath~"sim/multiplay/generic/int[7]", mpPath~"sim/crashed"),
	mpVar.new(mpPath~"sim/multiplay/generic/int[0]", navSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[1]", beaconSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[1]", strobeSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[3]", landingSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[4]", taxiSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[4]", probeSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[0]", whiteSwitch),
];
#loop at the default MP transfer frequency (10Hz)
var mirrorTimer = maketimer(0.1, func {
	foreach(var mir; mirrorValues) {
		mir.check();
	}
});
mirrorTimer.start();



#### NAV LIGHTS ####

#class for a periodic fade in/out animation - for flashing, use rather standard aircraft.light.new(), as in Beacon and Strobe section
var lightCycle = {
	#constructor
	new: func(propSwitch, propOut) {
		m = { parents: [lightCycle] };
		props.globals.initNode(propOut, 0, "DOUBLE");
		props.globals.initNode(propSwitch, 1, "BOOL");
		m.fadeIn = 0.4 + rand()*0.05-0.025; #fade in time
		m.fadeOut = 0.4 + rand()*0.05-0.025; #fade out time
		m.stayOn = 1.5 + rand()*0.05-0.025; #stable on period
		m.stayOff = 1 + rand()*0.05-0.025; #stable off period
		m.turnOff = 0.12; #fade out time when turned off
		m.phase = 0; #phase to be run on next timer call: 0 -> fade in, 1 -> stay on, 2 -> fade out, 3 -> stay off
		m.cycleTimer = maketimer(0.1, func {
			if(getprop(propSwitch)) {
				if(m.phase == 0) {
					interpolate(propOut, 1, m.fadeIn);
					m.phase = 1;
					m.cycleTimer.restart(m.fadeIn);
				}
				else if(m.phase == 1){
					m.phase = 2;
					m.cycleTimer.restart(m.stayOn);
				}
				else if(m.phase == 2){
					interpolate(propOut, 0, m.fadeOut);
					m.phase = 3;
					m.cycleTimer.restart(m.fadeOut);
				}
				else if(m.phase == 3){
					m.phase = 0;
					m.cycleTimer.restart(m.stayOff);
				}
			}
			else {
				interpolate(propOut, 0, m.turnOff); #kills any currently ongoing interpolation
				m.phase = 0;
			}
		});
		m.cycleTimer.singleShot = 1;
		if(propSwitch==nil) {
			m.listen = nil;
			return m;
		}
		m.listen = setlistener(propSwitch, func{m.cycleTimer.restart(0);}); #handle switch changes
		m.cycleTimer.restart(0); #start the looping
		return m;
	},
	#destructor
	del: func {
		if(me.listen!=nil) removelistener(me.listen);
		me.cycleTimer.stop();
	},
};

#By default, the switch property is initialized to 1 (only if no value is already assigned). Don't change the class implementation! To override this, set the property manually. You don't need to care if any other code already does it for you. 
var navLights = nil;
if(!navStillOn) {
	navLights = lightCycle.new(navSwitch, lightsPath~"nav-lights-intensity");
	### Uncomment and tune those to customize times ###
	#navLights.fadeIn = 0.4; #fade in time 
	#navLights.fadeOut = 0.4; #fade out time
	#navLights.stayOn = 3 + rand()*0.05-0.025; #stable on period
	#navLights.stayOff = 0.6; #stable off period
	#navLights.turnOff = 0.12; #fade out time when turned off
}


### BEACON ###
var beacon = nil;
if(beaconSwitch!=nil) {
	props.globals.initNode(beaconSwitch, 1, "BOOL");
	beacon = aircraft.light.new(lightsPath~"beacon-state", 
		[0.0, 1.0 + rand()*0.05-0.025], beaconSwitch);
}
	
	
### STROBE ###
var strobe = nil;
if(strobeSwitch!=nil) {
	props.globals.initNode(strobeSwitch, 1, "BOOL");
	strobe = aircraft.light.new(lightsPath~"strobe-state", 
		[0.0, 0.87 + rand()*0.05-0.025], strobeSwitch);
}


### LIGHT FADING ###

#class for controlling fade in/out behavior - propIn is a control property (handled as a boolean) and propOut is interpolated
#all light brightness animations in xmls depend on propOut (Rembrandt brightness, material emission, flares transparency, ...)
var lightFadeInOut = {
	#constructor
	new: func(propSwitch, propOut) {
		m = { parents: [lightFadeInOut] };
		m.fadeIn = 0.3; #some sane defaults
		m.fadeOut = 0.4;
		if(propSwitch==nil) {
			m.listen = nil;
			return m;
		}
		props.globals.initNode(propSwitch, 1, "BOOL");
		m.isOn = getprop(propSwitch);
		props.globals.initNode(propOut, m.isOn, "DOUBLE");
		m.listen = setlistener(propSwitch, 
			func {
				if(m.isOn and !getprop(propSwitch)) {
					interpolate(propOut, 0, m.fadeOut);
					m.isOn = 0;
				}
				if(!m.isOn and getprop(propSwitch)) {
					interpolate(propOut, 1, m.fadeIn);
					m.isOn = 1;
				}
			}
		);
		return m;
	},
	#destructor
	del: func {
		if(me.listen!=nil) removelistener(me.listen);
	},
};

fadeLanding = lightFadeInOut.new(landingSwitch, lightsPath~"landing-lights-intensity");
fadeTaxi = lightFadeInOut.new(taxiSwitch, lightsPath~"taxi-light-intensity");
fadeProbe = lightFadeInOut.new(probeSwitch, lightsPath~"probe-light-intensity");
fadeWhite = lightFadeInOut.new(whiteSwitch, lightsPath~"white-light-intensity");
if(navStillOn) {
	navLights = lightFadeInOut.new(navSwitch, lightsPath~"nav-lights-intensity");
	navLights.fadeIn = 0.1;
	navLights.fadeOut = 0.12;
}
#manipulate times if defaults don't fit your needs:
#fadeLanding.fadeIn = 0.5;
#fadeLanding.fadeOut = 0.8;


### the rest of your model load embedded Nasal code ###

    ]]>
    </load>
    <unload>
	 #prevent multiple timers and listeners from running and fighting on next connect
      #cleanly destroy MP property mirroring
      mirrorTimer.stop();
      mirrorTimer = nil;
      mirrorValues = nil;
      
      #cleanly destroy nav lights
      if(navStillOn) {
      	navLights.del();
      }
      else {
      	if(navSwitch!=nil) setprop(navSwitch, 0);
      	navLights.del();
      	if(navSwitch!=nil) navLights.cycleTimer = nil;
      	navLights = nil;
      }
      
      #cleanly destroy beacon
      if(beaconSwitch!=nil) setprop(beaconSwitch, 0);
      beacon.del();
      beacon = nil;
      
      #cleanly destroy strobe
      if(strobeSwitch!=nil) setprop(strobeSwitch, 0);
      strobe.del();
      strobe = nil;
      
      #cleanly destroy light fade in/out animation objects
      fadeLanding.del();
      fadeTaxi.del();
      fadeProbe.del();
      fadeWhite.del();
      
      ### the rest of your model unload embedded Nasal code ###
	  
      livery_update.stop();
    </unload>
  </nasal>
 
 <!-- fuselage -->
  <animation>
        <type>material</type>
        <object-name>fuselage</object-name>
		<object-name>intakes</object-name>
		<object-name>left-canard</object-name>
		<object-name>righ-canard</object-name>
		<object-name>air-brake</object-name>
		<object-name>left-aleron</object-name>
		<object-name>left-flap.001</object-name>
		<object-name>right-flap.001</object-name>
		<object-name>right-aleron</object-name>
		<object-name>55b3346d_dds.023</object-name>
		<object-name>upper-nozzels</object-name>
		<object-name>lower-nozzels</object-name>
		<object-name>55b3346d_dds.023</object-name>
		<object-name>maingearL.doorfwd2</object-name>
		<object-name>maingearL.doorfwd1</object-name>
		<object-name>maingearL.dooraft</object-name>
		<object-name>maingearR.doorfwd2</object-name>
        <object-name>maingearR.doorfwd1</object-name>
		<object-name>maingearR.dooraft</object-name>
		<object-name>nosegear.dooraft</object-name>
		<object-name>nosegear.doorfwd</object-name>
		<object-name>right-elevator</object-name>
		<object-name>left-elevator</object-name>
		<object-name>left-rudder</object-name>
		<object-name>right-rudder</object-name>
		<object-name>canopyframe2</object-name>
		<object-name>inner-pylons</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture</texture-prop>
        <texture>ACTIVE.png</texture>
    </animation>
 
 




	<!-- glass -->
	<animation>
    <type>shader</type>
    <shader>chrome</shader>
    <texture>Aircraft/Generic/Effects/glass_shader.png</texture>
   <object-name>canopyglass</object-name>
         <object-name>frontglass.001</object-name>
		 <object-name>hudglass</object-name>
  </animation>
	
	<effect>
      <inherits-from>Effects/model-transparent</inherits-from>
     <object-name>canopyglass</object-name>
         <object-name>frontglass.001</object-name>
		 <object-name>hudglass</object-name>
   </effect>
  

   
    <animation>
        <type>select</type>
        
		 <object-name>canopyglass</object-name>
         <object-name>frontglass.001</object-name>
		<condition>
<not>
            <property>sim/current-view/internal</property>
</not>
        </condition>
    </animation>	

   <!-- Turns off non rembrant lighting and effects 
<animation>
        <type>select</type>
       
	<object-name>CPT-hud-screen</object-name>
	
		<condition>
            <not>
            <property>/sim/rendering/rembrandt/enabled</property>
            </not>
        </condition>
    </animation>	
-->

 <!-- Solid Surfaces for Rembrandt rendering	 		-->
   <animation>
    
   <object-name>fuselage</object-name>
		<object-name>intakes</object-name>
		<object-name>left-canard</object-name>
		<object-name>righ-canard</object-name>
		<object-name>air-brake</object-name>
		<object-name>left-aleron</object-name>
		<object-name>left-flap</object-name>
		<object-name>right-flap</object-name>
		<object-name>right-aleron</object-name>
		<object-name>55b3346d_dds.023</object-name>
		<object-name>upper-nozzels</object-name>
		<object-name>lower-nozzels</object-name>
		<object-name>55b3346d_dds.023</object-name>
		<object-name>DrawCall59</object-name>
		<object-name>DrawCall57</object-name>
		<object-name>DrawCall61</object-name>
		<object-name>DrawCall83</object-name>
        <object-name>DrawCall81</object-name>
		<object-name>DrawCall85</object-name>
		<object-name>DrawCall56</object-name>
		<object-name>DrawCall52</object-name>
		<object-name>right-elevator</object-name>
		<object-name>left-elevator</object-name>
		<object-name>left-rudder</object-name>
		<object-name>right-rudder</object-name>
		<object-name>canopyframe2</object-name>

    </animation>


	
<!-- canopy -->



<animation>
    <type>rotate</type>
    <object-name>canopyframe2</object-name>
	<object-name>canopyglass</object-name>
	<object-name>canopy-frame</object-name>
	<object-name>DrawCall40</object-name>
	<object-name>mirrors</object-name>
	<!--<object-name>0fdd30ec_dds.003</object-name>-->
	<object-name>compass</object-name>
	<object-name>canopytext</object-name>
    <property>instrumentation/doors/crew/position-norm</property>
    <interpolation>
      <entry><ind> 0 </ind><dep>  0 </dep></entry>
      <entry><ind> 1 </ind><dep> 60 </dep></entry>
    </interpolation>
    <center>
      <x-m> -2.35 </x-m>
      <y-m>  0.000 </y-m>
      <z-m>  1.51 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  1 </y>
      <z>  0 </z>
    </axis>
  </animation>
  
 <!-- Gear -->
 
 <!-- Nosegear -->

 <animation>
  <type>rotate</type>
  <object-name>nosegear.doorfwd</object-name>
  <property>gear/gear[0]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.1</ind><dep>-90</dep></entry>
   <entry><ind>0.8</ind><dep>-90</dep></entry>
   <entry><ind>0.9</ind><dep>0</dep></entry>
  </interpolation> 
  <center>
   <x-m>-4.653</x-m>
   <y-m>-0.155</y-m>
   <z-m>-0.265</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>  
 
 <animation>
  <type>rotate</type>
  <object-name>nosegear.dooraft</object-name>
  <property>gear/gear[0]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.7</ind><dep>0</dep></entry>
   <entry><ind>0.15</ind><dep>95</dep></entry>
   <entry><ind>0</ind><dep>95</dep></entry>
  </interpolation> 
  <center>
   <x-m>-3.155</x-m>
   <y-m>0</y-m>
   <z-m>-0.299</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation> 
 
 <animation>
  <type>rotate</type>
  <object-name>nosegear.upper</object-name>
  <object-name>nosegear.lower</object-name>
  <object-name>nosegear.wheel</object-name>
  <object-name>nosegear.strut</object-name>
  <property>gear/gear[0]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.7</ind><dep>0</dep></entry>
   <entry><ind>0.15</ind><dep>100</dep></entry>
   <entry><ind>0</ind><dep>100</dep></entry>
  </interpolation> 
  <center>
   <x-m>-3.345</x-m>
   <y-m>0</y-m>
   <z-m>-0.215</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation> 
 
 <animation>
  <type>rotate</type>
  <object-name>nosegear.strut</object-name>
  <property>gear/gear[0]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.7</ind><dep>0</dep></entry>
   <entry><ind>0.15</ind><dep>-100</dep></entry>
   <entry><ind>0</ind><dep>-100</dep></entry>
  </interpolation> 
  <center>
   <x-m>-3.462</x-m>
   <y-m>0</y-m>
   <z-m>-0.953</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>
 
 <animation>
  <type>select</type>
  <object-name>nosegear.upper</object-name>
  <object-name>nosegear.lower</object-name>
  <object-name>nosegear.wheel</object-name>
  <object-name>nosegear.strut</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[0]/position-norm</property>
	<value>0</value>
   </greater-than>
  </condition>
 </animation>
 
 <animation>
  <object-name>nosegear.wheel</object-name>
  <type>spin</type>
  <property>sim/multiplay/generic/float[6]</property>
  <factor>-20</factor>
  <center>
   <x-m>-3.268</x-m>
   <y-m>-0.0065</y-m>
   <z-m>-1.7</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>
 
 <animation>
  <type>rotate</type>
  <object-name>nosegear.lower</object-name>
  <object-name>nosegear.wheel</object-name>
  <property>gear/gear[0]/caster-angle-deg</property>
  <factor>-1</factor> 
  <center>
   <x-m>-3.345</x-m>
   <y-m>0</y-m>
   <z-m>-0.215</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>0</y>
   <z>1</z>
  </axis>
 </animation> 
 
 <!-- Main Gear Left -->

 <animation>
  <type>rotate</type>
  <object-name>maingearL.doorfwd1</object-name>
  <property>gear/gear[1]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.12</ind><dep>-115</dep></entry>
   <entry><ind>0.79</ind><dep>-115</dep></entry>
   <entry><ind>0.92</ind><dep>0</dep></entry>
  </interpolation> 
  <center>
   <x-m>0.728</x-m>
   <y-m>-1.287</y-m>
   <z-m>-0.537</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation> 
 
 <animation>
  <type>rotate</type>
  <object-name>maingearL.doorfwd2</object-name>
  <property>gear/gear[1]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.12</ind><dep>70</dep></entry>
   <entry><ind>0.79</ind><dep>70</dep></entry>
   <entry><ind>0.92</ind><dep>0</dep></entry>
  </interpolation> 
  <center>
   <x-m>0.792</x-m>
   <y-m>-0.272</y-m>
   <z-m>-0.448</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0.12</y>
   <z>0</z>
  </axis>
 </animation>
 
 <animation>
  <type>rotate</type>
  <object-name>maingearL.dooraft</object-name>
  <property>gear/gear[1]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.12</ind><dep>95</dep></entry>
   <entry><ind>0.79</ind><dep>95</dep></entry>
   <entry><ind>1</ind><dep>95</dep></entry>
  </interpolation> 
  <center>
   <x-m>1.858</x-m>
   <y-m>-0.778</y-m>
   <z-m>-0.556</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>maingearL.upper</object-name>
  <object-name>maingearL.lower</object-name>
  <object-name>maingearL.wheel</object-name>
  <object-name>maingearL.strutinner</object-name>
  <object-name>maingearL.strutouter</object-name>
  <object-name>maingearL.ring</object-name>
  <object-name>maingearL.susp</object-name>
  <property>gear/gear[1]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.8</ind><dep>0</dep></entry>
   <entry><ind>0.15</ind><dep>95</dep></entry>
   <entry><ind>0</ind><dep>95</dep></entry>
  </interpolation> 
  <center>
   <x-m>2.158</x-m>
   <y-m>-1.145</y-m>
   <z-m>-0.415</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>-0.35</z>
  </axis>
 </animation> 
 
 <animation>
  <type>rotate</type>
  <object-name>maingearL.lower</object-name>
  <object-name>maingearL.wheel</object-name>
  <object-name>maingearL.ring</object-name>
  <object-name>maingearL.susp</object-name>
  <property>gear/gear[1]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.7</ind><dep>0</dep></entry>
   <entry><ind>0.3</ind><dep>-72</dep></entry>
   <entry><ind>0</ind><dep>-72</dep></entry>
  </interpolation> 
  <center>
   <x-m>2.158</x-m>
   <y-m>-1.145</y-m>
   <z-m>-0.415</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>0</y>
   <z>1</z>
  </axis>
 </animation>
 
 <animation>
  <object-name>maingearL.wheel</object-name>
  <type>spin</type>
  <property>sim/multiplay/generic/float[7]</property>
  <factor>-20</factor>
  <center>
   <x-m>2.146</x-m>
   <y-m>-1.341</y-m>
   <z-m>-1.6</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>
 
 <animation>
  <type>select</type>
  <object-name>maingearL.upper</object-name>
  <object-name>maingearL.lower</object-name>
  <object-name>maingearL.wheel</object-name>
  <object-name>maingearL.strutinner</object-name>
  <object-name>maingearL.strutouter</object-name>
  <object-name>maingearL.ring</object-name>
  <object-name>maingearL.susp</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[1]/position-norm</property>
	<value>0</value>
   </greater-than>
  </condition>
 </animation>

  <!-- Main Gear Right -->

 <animation>
  <type>rotate</type>
  <object-name>maingearR.doorfwd1</object-name>
  <property>gear/gear[2]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.14</ind><dep>115</dep></entry>
   <entry><ind>0.81</ind><dep>115</dep></entry>
   <entry><ind>0.89</ind><dep>0</dep></entry>
  </interpolation> 
  <center>
   <x-m>0.728</x-m>
   <y-m>1.293</y-m>
   <z-m>-0.559</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation> 
 
 <animation>
  <type>rotate</type>
  <object-name>maingearR.doorfwd2</object-name>
  <property>gear/gear[2]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.12</ind><dep>-70</dep></entry>
   <entry><ind>0.79</ind><dep>-70</dep></entry>
   <entry><ind>0.92</ind><dep>0</dep></entry>
  </interpolation> 
  <center>
   <x-m>0.792</x-m>
   <y-m>0.272</y-m>
   <z-m>-0.448</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>-0.12</y>
   <z>0</z>
  </axis>
 </animation>
 
 <animation>
  <type>rotate</type>
  <object-name>maingearR.dooraft</object-name>
  <property>gear/gear[2]/position-norm</property>
  <!--<factor>-90</factor>-->
  <interpolation>
   <entry><ind>0</ind><dep>0</dep></entry>
   <entry><ind>0.12</ind><dep>-95</dep></entry>
   <entry><ind>0.79</ind><dep>-95</dep></entry>
   <entry><ind>1</ind><dep>-95</dep></entry>
  </interpolation> 
  <center>
   <x-m>1.858</x-m>
   <y-m>0.778</y-m>
   <z-m>-0.556</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>
 
<animation>
  <type>rotate</type>
  <object-name>maingearR.upper</object-name>
  <object-name>maingearR.lower</object-name>
  <object-name>maingearR.wheel</object-name>
  <object-name>maingearR.strutinner</object-name>
  <object-name>maingearR.strutouter</object-name>
  <object-name>maingearR.ring</object-name>
  <object-name>maingearR.susp</object-name>
  <property>gear/gear[2]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.8</ind><dep>0</dep></entry>
   <entry><ind>0.15</ind><dep>95</dep></entry>
   <entry><ind>0</ind><dep>95</dep></entry>
  </interpolation> 
  <center>
   <x-m>2.158</x-m>
   <y-m>1.145</y-m>
   <z-m>-0.415</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0.35</z>
  </axis>
 </animation> 
 
 <animation>
  <type>rotate</type>
  <object-name>maingearR.lower</object-name>
  <object-name>maingearR.wheel</object-name>
  <object-name>maingearR.ring</object-name>
  <object-name>maingearR.susp</object-name>
  <property>gear/gear[2]/position-norm</property>
  <interpolation>
   <entry><ind>1</ind><dep>0</dep></entry>
   <entry><ind>0.7</ind><dep>0</dep></entry>
   <entry><ind>0.3</ind><dep>72</dep></entry>
   <entry><ind>0</ind><dep>72</dep></entry>
  </interpolation> 
  <center>
   <x-m>2.158</x-m>
   <y-m>1.145</y-m>
   <z-m>-0.415</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>0</y>
   <z>1</z>
  </axis>
 </animation>
 
 <animation>
  <object-name>maingearR.wheel</object-name>
  <type>spin</type>
  <property>sim/multiplay/generic/float[7]</property>
  <factor>-20</factor>
  <center>
   <x-m>2.146</x-m>
   <y-m>1.334</y-m>
   <z-m>-1.636</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>
 
 <animation>
  <type>select</type>
  <object-name>maingearR.upper</object-name>
  <object-name>maingearR.lower</object-name>
  <object-name>maingearR.wheel</object-name>
  <object-name>maingearR.strutinner</object-name>
  <object-name>maingearR.strutouter</object-name>
  <object-name>maingearR.ring</object-name>
  <object-name>maingearR.susp</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[2]/position-norm</property>
	<value>0</value>
   </greater-than>
  </condition>
 </animation>
 
 
 
 <animation>
  <type>rotate</type>
  <object-name>left-elevator</object-name>
  <object-name>55b3346d_dds.006</object-name>
  <object-name>55b3346d_dds.008</object-name>
  <object-name>right-elevator</object-name>  
  <property>surface-positions/elevator-pos-norm</property>
  <factor>25</factor>
  <center>
   <x-m>8</x-m>
   <y-m>0</y-m>
   <z-m>0.05</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>
 
 
 
 <animation>
  <type>rotate</type>
  <object-name>left-canard</object-name>
  <object-name>righ-canard</object-name>
  <property>surface-positions/elevator-pos-norm</property>
  <factor>-15</factor>
  <center>
   <x-m>-1.93</x-m>
   <y-m>0</y-m>
   <z-m>0.85</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>
 
 
 <animation>
    <type>rotate</type>
    <object-name>left-flap.001</object-name>
     <property>surface-positions/left-flap-pos-norm</property>
    <factor>40.0</factor>
    <center>
      <x-m> 4.36</x-m>
      <y-m>  -2.7</y-m>
      <z-m> 0.5 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  0.1 </y>
      <z>  0 </z>
    </axis>
  </animation>
  
  <animation>
    <type>rotate</type>
    <object-name>right-flap.001</object-name>
     <property>surface-positions/right-flap-pos-norm</property>
    <factor>40.0</factor>
    <center>
      <x-m>4.36</x-m>
      <y-m> 2.7</y-m>
      <z-m> 0.5 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  0.1 </y>
      <z>  0 </z>
    </axis>
  </animation>
 
  
  
  <!-- NOZZELS FOR VECTORING -->
  <animation>
    <type>rotate</type>
    <object-name>upper-nozzels</object-name>
	<object-name>lburner</object-name>
	<object-name>rburner</object-name>
    <property>engines/engine[0]/vector-norm</property>
    <factor>20.0</factor>
    <center>
      <x-m>7.55</x-m>
      <y-m>0</y-m>
      <z-m> 0.6 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  0.1 </y>
      <z>  0 </z>
    </axis>
  </animation>
  
  
  <animation>
    <type>rotate</type>
    <object-name>lower-nozzels</object-name>
   <property>engines/engine[0]/vector-norm</property>
    <factor>20.0</factor>
    <center>
      <x-m>7.55</x-m>
      <y-m>0</y-m>
      <z-m> -0.3 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  0.1 </y>
      <z>  0 </z>
    </axis>
  </animation>
 
 
 
 
<animation>
 <type>rotate</type>
 <object-name>air-brake</object-name>
 <property>surface-positions/speedbrake-pos-norm</property>
 <factor>-50</factor>
 <center>
 <x-m>-0.9</x-m>
 <y-m>0.0</y-m>
 <z-m>1.1</z-m>
 </center>
 <axis>
 <x>0.0</x>
 <y>0.1</y>
 <z>0.0</z>
 </axis>
 </animation> 

 <animation>
  <type>rotate</type>
  <object-name>left-aleron</object-name>
  <property>surface-positions/left-aileron-pos-norm</property>
  <factor>-20</factor>
  <axis>
   <x1-m>4.4</x1-m>
   <y1-m>-3.8</y1-m>
   <z1-m>0.529</z1-m>
   <x2-m>5.3</x2-m>
   <y2-m>-5.3</y2-m>
   <z2-m>0.5</z2-m>   
  </axis>
 </animation>
 
 <animation>
  <type>rotate</type>
  <object-name>right-aleron</object-name>
   <property>surface-positions/right-aileron-pos-norm</property>
  <factor>20</factor>
  <axis>
   <x1-m>4.4</x1-m>
   <y1-m>3.8</y1-m>
   <z1-m>0.529</z1-m>
   <x2-m>5.3</x2-m>
   <y2-m>5.3</y2-m>
   <z2-m>0.5</z2-m>  
  </axis>
 </animation> 

 <animation>
  <type>rotate</type>
  <object-name>left-rudder</object-name>
  <property>surface-positions/rudder-pos-norm</property>
  <factor>-30</factor>
  <axis>
   <x1-m>7.51</x1-m>
   <y1-m>-1.70</y1-m>
   <z1-m>0.7</z1-m>  
   <x2-m>7.9</x2-m>
   <y2-m>-1.70</y2-m>
   <z2-m>2.18</z2-m>
   </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>right-rudder</object-name>
  <property>surface-positions/rudder-pos-norm</property>
  <factor>-30</factor>
  <axis>
   <x1-m>7.51</x1-m>
   <y1-m>1.70</y1-m>
   <z1-m>0.7</z1-m>  
   <x2-m>7.9</x2-m>
   <y2-m>1.70</y2-m>
   <z2-m>2.18</z2-m>
   </axis>
 </animation>


<animation>
    <type>rotate</type>
    <object-name>left-flap</object-name>
    <property>surface-positions/flap-pos-norm</property>
    <factor>40.0</factor>
    <center>
      <x-m> 3.7</x-m>
      <y-m>  -2.3</y-m>
      <z-m> 0.25 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  0.1 </y>
      <z>  0 </z>
    </axis>
  </animation>
  
  <animation>
    <type>rotate</type>
    <object-name>right-flap</object-name>
    <property>surface-positions/flap-pos-norm</property>
    <factor>40.0</factor>
    <center>
      <x-m> 3.7</x-m>
      <y-m> 2.3</y-m>
      <z-m> 0.25 </z-m>
    </center>
    <axis>
      <x>  0 </x>
      <y>  0.1 </y>
      <z>  0 </z>
    </axis>
  </animation>
  
  <!-- arresor hook -->
  
  <animation>
 <type>rotate</type>
 <object-name>hook</object-name>
 <property>gear/tailhook/position-norm</property>
 <factor>80</factor>
 <center>
  <x-m>5.7</x-m>
  <y-m> 0.000</y-m>
  <z-m>-0.2</z-m>
 </center>
 <axis>
  <x>0</x>
  <y>1</y>
  <z>0</z>
 </axis>
</animation>
  
  
<!-- Interior -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Interior/interior.xml</path>
    <offsets>
      <x-m> 0 </x-m>
      <y-m> 0 </y-m>
      <z-m> 0 </z-m>
    </offsets>
  </model>

<!-- Armament  -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/weapons/loads.xml</path>
    <offsets>
      <x-m> -0.3 </x-m>
      <y-m> 0 </y-m>
      <z-m> -0.3 </z-m>
    </offsets>
  </model> 

 <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/guns/fire.xml</path>
    <offsets>
      <x-m> -1.364 </x-m>
      <y-m> 1.47 </y-m>
      <z-m> 0.35</z-m>
      <roll-deg>    0 </roll-deg>
      <pitch-deg> 180 </pitch-deg>
      <heading-deg> 0 </heading-deg>
    </offsets>
  </model>


<!--  Smoke and lights -->

<!-- LIGHTS -->

 <model>
 
    <path>Aircraft/F-15-ACTIVE/Models/Lights/LightPack.xml</path>
    <offsets>
      <x-m>0</x-m>
      <y-m>0</y-m>
      <z-m>0</z-m>

    </offsets>
  </model>


<!--
<model>
    <name>Taxi-Light-Left</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/light-cone.xml</path>
    <offsets>
    <x-m>-3.10</x-m>
    <y-m>  0.000</y-m> 
    <z-m> -0.950</z-m>
    <pitch-deg>   -8.000 </pitch-deg>
    <heading-deg>  0 </heading-deg>
    </offsets>
</model>

<animation>
    <type>select</type>
   
    <object-name>Taxi-Light-Left</object-name>
         
    <condition>
      <equals>
        <property>controls/switches/landing-light</property>
        <value> 0 </value>
      </equals>
    </condition>
  </animation> 



<model>
<name>red-colision</name>     
    <path>Aircraft/F-15-ACTIVE/Models/lights/beacon.xml</path>
    <offsets>
      <x-m>0.05</x-m>
      <y-m> -1.9 </y-m>
      <z-m> 0.29</z-m>


          </offsets>
  </model> 


<model>
<name>red-colision</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/beacon.xml</path>
    <offsets>
       <x-m>0.05 </x-m>
      <y-m> 1.9 </y-m>
      <z-m> 0.29</z-m>

    </offsets>
  </model>

  <animation>
    <type>select</type>
    <object-name>white-colision</object-name>
    <object-name>red-colision</object-name>
         
    <condition>
      <equals>
        <property>controls/switches/col-light</property>
        <value> 1 </value>
      </equals>
    </condition>
  </animation>
  

<model>
<name>formation</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/RedLight.xml</path>
    <offsets>
      <x-m>  7.43 </x-m>
      <y-m> 1.4 </y-m>
      <z-m> 2.5</z-m>

    </offsets>
  </model>

  <animation>
    <type>select</type>
    <object-name>formation</object-name>
    
         
    <condition>
      <equals>
        <property>controls/switches/form-light</property>
        <value> 1 </value>
      </equals>
    </condition>
  </animation> 


  <model>
  <name>Red-Light</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/RedLight.xml</path>
    <offsets>
      <x-m>  3.5 </x-m>
      <y-m> -5.2 </y-m>
      <z-m> 0.16</z-m>

    </offsets>
  </model>


  <model>
  <name>Green-Light</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/GreenLight.xml</path>
    <offsets>
      <x-m>  3.6 </x-m>
      <y-m> 5.2 </y-m>
      <z-m> 0.16</z-m>

    </offsets>
  </model>

  <animation>
    <type>select</type>
    <object-name>Green-Light</object-name>
    <object-name>Red-Light</object-name>
         
    <condition>
      <equals>
        <property>controls/switches/nav-light</property>
        <value> 1 </value>
      </equals>
    </condition>
  </animation>
  

  

  <model>
  <name>white-colision</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/StrobeWhite.xml</path>
    <offsets>
      <x-m>  3.8 </x-m>
      <y-m> -5.2 </y-m>
      <z-m> 0.18</z-m>

    </offsets>
  </model>

  <model>
  <name>white-colision</name>
    <path>Aircraft/F-15-ACTIVE/Models/lights/StrobeWhite.xml</path>
    <offsets>
      <x-m>  3.8 </x-m>
      <y-m> 5.2 </y-m>
      <z-m> 0.18</z-m>

    </offsets>
  </model>
  -->

<!-- Smoke n Flames -->

<model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/ground/ground0.xml</path>
    <offsets>
      <x-m> -3.0 </x-m>
      <y-m>  0.000 </y-m>
      <z-m> -1.47</z-m>
    </offsets>
  </model>

  <!-- Roue gauche -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/ground/ground1.xml</path>
    <offsets>
      <x-m> 2.0 </x-m>
      <y-m> -1.1 </y-m>
      <z-m> -1.4 </z-m>
    </offsets>
  </model>

  <!-- Roue droite -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/ground/ground2.xml</path>
    <offsets>
      <x-m> 2.0 </x-m>
      <y-m>  1.1 </y-m>
      <z-m> -1.4 </z-m>
    </offsets>
  </model>

  <!-- Poussière -->
  <!-- Gauche -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/smoke/smokeL.xml</path>
    <offsets>
      <x-m>  9.7 </x-m>
      <y-m>  -0.65</y-m>
      <z-m> 0.</z-m>

    </offsets>
  </model>

  <!-- Droite -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/smoke/smokeR.xml</path>
    <offsets>
      <x-m>  9.7</x-m>
      <y-m>  0.55</y-m>
      <z-m> 0.3</z-m>


    </offsets>
  </model>

  <!-- Les flammes -->
  <!-- Gauche -->
  <model>
  <name>lburner</name>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/Afterburner/EJ200-L.xml</path>
    <offsets>
      <x-m>  8.6</x-m>
      <y-m>  -0.64</y-m>
      <z-m> 0.1</z-m>

    </offsets>
  </model>

 <!-- Droite -->
  <model>
  <name>rburner</name>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/Afterburner/EJ200-R.xml</path>
    <offsets>
      <x-m> 8.6</x-m>
      <y-m>  0.65</y-m>
      <z-m> 0.1</z-m>

    </offsets>
  </model>

  <!-- Gauche -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/tiptrail/tiptrail.xml</path>
    <offsets>
      <x-m>4</x-m>
      <y-m> -6 </y-m>
      <z-m> 0.4</z-m>

    </offsets>
  </model>

  <!-- Droite -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/tiptrail/tiptrail.xml</path>
    <offsets>
      <x-m>4</x-m>
      <y-m>6</y-m>
      <z-m> 0.4</z-m>

    </offsets>
  </model>

  <!-- Gauche -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/trail/trailL.xml</path>
    <offsets>
      <x-m> 15.7 </x-m>
      <y-m>  -0.65</y-m>
      <z-m> 0.</z-m>
    </offsets>
  </model>

  <!-- Droite -->
  <model>
    <path>Aircraft/F-15-ACTIVE/Models/Effects/trail/trailR.xml</path>
    <offsets>
     <x-m> 15.7 </x-m>
      <y-m>  0.65</y-m>
      <z-m> 0.</z-m>
    </offsets>
  </model>

<!-- Low level wash -->

 <model>
	 <name>aircraft_wash_l</name>
	 <path>Aircraft/F-15-ACTIVE/Models/Effects/aircraft_wash.xml</path>
	 <condition>
		 <equals>
			 <property>controls/state/low_level</property>
			 <value>1</value>
		 </equals>
	 </condition>
	 <offsets>
		 <x-m>35.000</x-m>
		 <y-m>4.50</y-m>
		 <z-m>0.0</z-m>
		 <pitch-deg>0</pitch-deg>
	 </offsets>
 </model>

<model>
	 <name>aircraft_wash_r</name>
	 <path>Aircraft/F-15-ACTIVE/Models/Effects/aircraft_wash.xml</path>
	 <condition>
		 <equals>
			 <property>controls/state/low_level</property>
			 <value>1</value>
		 </equals>
	 </condition>
	 <offsets>
		 <x-m>35.000</x-m>
		 <y-m>-4.50</y-m>
		 <z-m>0.0</z-m>
		 <pitch-deg>0</pitch-deg>
	 </offsets>
 </model>
  
  <animation>
	 <type>translate</type>
	 <object-name>aircraft_wash_l</object-name>
	 <object-name>aircraft_wash_r</object-name>
	 <property>position/altitude-agl-ft</property>
	 <condition>
		 <equals>
			 <property>controls/state/low_level</property>
			 <value>1</value>
		 </equals>
	 </condition>
	 <interpolation>
		 <entry>
			 <ind>0.0</ind>
			 <dep>0.0</dep>
		 </entry>
		 <entry>
			 <ind>300.0</ind>
			 <dep>-90</dep>
		 </entry>
	 </interpolation>
	 
	 <axis>
		 <x>-1</x>
		 <y>0</y>
		 <z>1.0</z>
	 </axis>
	 
 </animation>

 <!-- ******************************************************************* -->
<!-- FX                                                                  -->
<!-- ******************************************************************* -->
	<!--
	<model>
		<path>Aircraft/F-15-ACTIVE/Models/fx.xml</path>
		<offsets>
			<x-m>0</x-m>
			<y-m>0</y-m>
			<z-m>0.28</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model> 
	-->
	<model>
		<path>Aircraft/F-15-ACTIVE/Models/Effects/Vapour/Vapour.xml</path>
		<offsets>
			<x-m>-2.0</x-m>
			<y-m>0</y-m>
			<z-m>1</z-m>
			<roll-deg>0</roll-deg>
			<pitch-deg>0</pitch-deg>
			<heading-deg>0</heading-deg>
		</offsets>
	</model>
	
	<model>
		<path>Aircraft/F-15-ACTIVE/Models/Effects/Vapour/Vapour2.xml</path>
		<offsets>
			<x-m>0</x-m>
			<y-m>0</y-m>
			<z-m>0.5</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model> 
	

</PropertyList>
